# ===============================
# APPLICATION CONFIGURATION
# ===============================
spring.application.name=spring-batch-csv-loader

# ===============================
# DATASOURCE CONFIGURATION
# ===============================
spring.datasource.url=jdbc:postgresql://localhost:5432/postgres
spring.datasource.username=admin
spring.datasource.password=password
spring.datasource.driver-class-name=org.postgresql.Driver

# Connection pool (HikariCP) settings ? recommended for performance
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=30000
spring.datasource.hikari.max-lifetime=1800000

# ===============================
# JPA / HIBERNATE CONFIGURATION
# ===============================
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.format_sql=true

# ===============================
# SPRING BATCH CONFIGURATION
# ===============================
# Initialize Spring Batch metadata tables if not present
spring.batch.jdbc.initialize-schema=always

# Disable auto-starting jobs (useful during development)
spring.batch.job.enabled=false

# ===============================
# LOGGING CONFIGURATION
# ===============================
logging.level.org.springframework.batch=INFO
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql=TRACE


# ===============================
# CSV FILE INPUT / OUTPUT CONFIG
# ===============================
app.csv.input-file=classpath:data/organizations-100000.csv
#app.csv.output-directory=files/output/
#app.csv.error-directory=files/error/

# If you?re using chunk processing
app.batch.chunk-size=1000
